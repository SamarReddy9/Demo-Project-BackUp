import {View, Text, TouchableOpacity, ScrollView} from 'react-native';
import React, {useState} from 'react';
import BlueArrowDown from '../assets/svg/BlueArrowDown.svg';
import BlueArrowUp from '../assets/svg/BlueArrowUp';
import Styles from '../src/config/Styles';
import {heightPercentageToDP as hp} from 'react-native-responsive-screen';
import Header from '../src/screens/Header';
import {PieChart} from 'react-native-gifted-charts';
import ConvertedLeads from '../assets/svg/ConvertedLeads.svg';
import TotalLeads from '../assets/svg/TotalLeads.svg';
import BookingValueSvg from '../assets/svg/BookingValue.svg';
import UnitsSvg from '../assets/svg/Units.svg';
import {Table, Row, Rows} from 'react-native-table-component';
import BoldArrowUp from '../assets/svg/BoldArrowUp.svg';
import BoldArrowDown from '../assets/svg/BoldArrowDown.svg';
import {FONT_SIZE} from '../src/config/Globles';

const PerformanceReports = props => {
  const [ratioShowDropdown, setratioShowDropdown] = useState(false);
  const [ratioSelectedOption, setRatioSelectedOption] =
    useState('FY 2022 - 23');
  const RatioDropDownOptions = [
    'Last month',
    'Current month',
    'This week',
    'Today',
  ];

  const ratioHandleOptionChange = value => {
    setRatioSelectedOption(value);
    setratioShowDropdown(false);
  };

  const [budgetShowDropdown, setbudgetShowDropdown] = useState(false);
  const [budgetSelectedOption, setbudgetSelectedOption] =
    useState('FY 2022 - 23');
  const budgetDropDownOptions = [
    'Last month',
    'Current month',
    'This week',
    'Today',
  ];

  const budgetHandleOptionChange = value => {
    setbudgetSelectedOption(value);
    setbudgetShowDropdown(false);
  };

  //Pie Chart - 1
  const pieChartOne = [
    {value: 35, color: '#37CF76', text: '35%'},
    {value: 65, color: '#0057FF', text: '65%'},
  ];

  const ConvertedLeadsCount = 38;
  const TotalLeadsCount = 536;
  let x = pieChartOne.map((ele, ind) => {
    return ele.value;
  });
  console.log(x);
  //Pie Chart - 2
  const pieChartTwo = [
    {value: 30, color: '#EBCB38', text: '54%'},
    {value: 45, color: '#F36F13', text: '30%'},
    {value: 22, color: '#25AED6', text: '26%'},
  ];

  const BookingValuePrice = 86.56;
  const BookingUnits = 86.56;

  const BHKColors = ['#EBCB38', '#F36F13', '#25AED6'];
  const BHKCategories = ['1 BHK (21)', '2 BHK (13)', '3 BHK (4)'];

  // BHK - 1
  const [showTableBHKOne, setShowTableBHKOne] = useState(false);
  const toggleTableBHKOne = () => setShowTableBHKOne(!showTableBHKOne);

  const BookingCountValueBHKOne = '6.86 Cr';
  const BookingUnitValueOne = '21';
  const BookingPercentageValueOne = '35';

  const listTitles = [
    <Text style={Styles.tableCellHeaderText}>Budget</Text>,
    <Text style={Styles.tableCellHeaderText}>Booking Value</Text>,
    <Text style={Styles.tableCellHeaderText}>Units</Text>,
    <Text style={Styles.tableCellHeaderText}>Percentage</Text>,
  ];

  const data = [
    {budget: '15 - 25', bookingValue: '50 L', units: 3, percentage: '0.8'},
    {budget: '25 - 35', bookingValue: '60 L', units: 2, percentage: '1'},
    {budget: '35 - 45', bookingValue: '3.6 Cr', units: 12, percentage: '3'},
    {budget: '45 - 55', bookingValue: '45 L', units: 1, percentage: '0.2'},
    {budget: '55 - 65', bookingValue: '1 Cr', units: 2, percentage: '0.4'},
    {budget: '65 - 75', bookingValue: '71 Lc', units: 1, percentage: '0.2'},
  ];

  const tableData = data.map(
    ({budget: bhk, bookingValue, units, percentage}) => {
      return [
        <Text style={Styles.tableCellText}>{bhk}</Text>,
        <Text style={Styles.tableCellText}>{bookingValue}</Text>,
        <Text style={Styles.tableCellText}>{units}</Text>,
        <Text style={Styles.tableCellText}>{percentage}%</Text>,
      ];
    },
  );

  // BHK - 2
  const [showTableBHKTwo, setShowTableBHKTwo] = useState(false);
  const toggleTableBHKTwo = () => setShowTableBHKTwo(!showTableBHKTwo);

  const BookingCountValueBHKTwo = '14.31 Cr';
  const BookingUnitValueTwo = 13;
  const BookingPercentageValueTwo = 40;

  // BHK - 3
  const [showTableBHKThree, setShowTableBHKThree] = useState(false);
  const toggleTableBHKThree = () => setShowTableBHKThree(!showTableBHKThree);

  const BookingCountValueBHKThree = '8.67 Cr';
  const BookingUnitValueThree = 4;
  const BookingPercentageValueThree = 25;

  //Pie  Chart - 2
  const pieData = [
    {value: 30, color: '#EBCB38', text: '54%'},
    {value: 45, color: '#F36F13', text: '30%'},
    {value: 22, color: '#25AED6', text: '26%'},
  ];

  return (
    <View style={Styles.container}>
      <Header {...props} title="Performance reports" />
      <ScrollView
        style={Styles.performanceReportsContainer}
        showsVerticalScrollIndicator={false}>
        <View style={Styles.perRepTitleAndDropDownContainer}>
          <Text style={Styles.dropDownTitleText}>
            Sale conversion ratio &nbsp;
            <Text style={[Styles.dropDownTitleText, {color: '#9747FF'}]}>
              35%
            </Text>
          </Text>

          <View>
            <TouchableOpacity
              onPress={() => {
                setRatioSelectedOption('FY 2022 - 23');
                setratioShowDropdown(!ratioShowDropdown);
              }}
              style={Styles.perRepDropDownDefaultDataIconContainer}>
              <Text style={Styles.perRepDropDownTextInput}>
                {ratioSelectedOption}
              </Text>

              {ratioShowDropdown ? (
                <BlueArrowUp width={hp('3.5%')} height={hp('3%')} />
              ) : (
                <BlueArrowDown width={hp('3.5%')} height={hp('3%')} />
              )}
            </TouchableOpacity>

            {ratioShowDropdown && (
              <View style={Styles.perRepDropDownListTextContainer}>
                {RatioDropDownOptions.map(option => (
                  <TouchableOpacity
                    key={option}
                    onPress={() => ratioHandleOptionChange(option)}
                    style={Styles.perRepDropDownList}>
                    <Text style={Styles.perRepDropDownListText}>{option}</Text>
                  </TouchableOpacity>
                ))}
              </View>
            )}
          </View>
        </View>

        <View style={Styles.leadsContainer}>
          <PieChart
            key={pieChartOne.value}
            showText
            textColor="white"
            radius={77}
            textSize={15}
            data={pieChartOne}
          />
          <View>
            <View style={Styles.convertedLeadsContainer}>
              <ConvertedLeads width={hp('6%')} height={hp('6%')} />
              <View style={Styles.convertedLeadsTextContainer}>
                <Text style={Styles.convertedLeadsTitle}>Converted leads</Text>
                <Text style={Styles.convertedLeadsValue}>
                  {ConvertedLeadsCount}
                </Text>
              </View>
            </View>
            <View style={Styles.convertedLeadsContainer}>
              <TotalLeads width={hp('6%')} height={hp('6%')} />
              <View style={Styles.convertedLeadsTextContainer}>
                <Text style={Styles.convertedLeadsTitle}> Total leads</Text>
                <Text style={Styles.convertedLeadsValue}>
                  {TotalLeadsCount}
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View style={Styles.bookingValueUnitsContainer}>
          <View style={Styles.bookingValueUnitsSvgContainer}>
            <BookingValueSvg width={hp('6%')} height={hp('6%')} />
            <View style={Styles.convertedLeadsTextContainer}>
              <Text>Booking value</Text>
              <Text style={Styles.convertedLeadsValue}>
                {BookingValuePrice} Lac
              </Text>
            </View>
          </View>
          <View style={Styles.bookingValueUnitsSvgContainer}>
            <UnitsSvg width={hp('6%')} height={hp('6%')} />
            <View style={Styles.convertedLeadsTextContainer}>
              <Text>Units</Text>
              <Text style={Styles.convertedLeadsValue}>{BookingUnits}</Text>
            </View>
          </View>
        </View>

        <View style={Styles.perRepTitleAndDropDownContainer}>
          <Text style={Styles.dropDownTitleText}>Typology & Budget</Text>

          <View>
            <TouchableOpacity
              onPress={() => {
                setbudgetSelectedOption('FY 2022 - 23');
                setbudgetShowDropdown(!budgetShowDropdown);
              }}
              style={Styles.perRepDropDownDefaultDataIconContainer}>
              <Text style={Styles.perRepDropDownTextInput}>
                {budgetSelectedOption}
              </Text>

              {budgetShowDropdown ? (
                <BlueArrowUp width={hp('3.5%')} height={hp('3%')} />
              ) : (
                <BlueArrowDown width={hp('3.5%')} height={hp('3%')} />
              )}
            </TouchableOpacity>
            {budgetShowDropdown && (
              <View style={Styles.perRepDropDownListTextContainer}>
                {budgetDropDownOptions.map(option => (
                  <TouchableOpacity
                    key={option}
                    onPress={() => budgetHandleOptionChange(option)}
                    style={Styles.perRepDropDownList}>
                    <Text style={Styles.perRepDropDownListText}>{option}</Text>
                  </TouchableOpacity>
                ))}
              </View>
            )}
          </View>
        </View>

        <View style={{flex: 1}}>
          <View style={Styles.leadsContainer}>
            <PieChart
              data={pieChartTwo}
              radius={75}
              showText
              textColor="white"
              textSize={13}
            />

            <View style={Styles.TypologyBudgetCategoriesContainer}>
              {BHKColors.map((color, index) => (
                <View key={index} style={Styles.TypologyBudgetItem}>
                  <View
                    style={[
                      Styles.TypologyBudgetColor,
                      {backgroundColor: color},
                    ]}
                  />
                  <Text style={Styles.TypologyBudgetText}>
                    {BHKCategories[index]}
                  </Text>
                </View>
              ))}
            </View>
          </View>

          {/* BHK - 1 */}
          <View style={{paddingBottom: hp('5%')}}>
            <View style={Styles.tableContainer}>
              <Table>
                <TouchableOpacity
                  onPress={toggleTableBHKOne}
                  style={Styles.tableHeadContainer}>
                  <View style={{flexDirection: 'row'}}>
                    <View style={Styles.tableHeadText}>
                      <Text
                        style={[
                          Styles.bhkTableTitle,
                          {fontSize: FONT_SIZE.F_15},
                        ]}>
                        1 BHK
                      </Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 22}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Booking value
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingCountValueBHKOne}
                      </Text>
                    </View>

                    <View style={[Styles.tableHeadText, {marginLeft: 33}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>Units</Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingUnitValueOne}
                      </Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 23}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Percentage
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingPercentageValueOne} %
                      </Text>
                    </View>
                    <View style={Styles.tableHeadSVG}>
                      {showTableBHKOne ? (
                        <BoldArrowUp width={hp('4.5%')} height={hp('3%')} />
                      ) : (
                        <BoldArrowDown width={hp('4.5%')} height={hp('3%')} />
                      )}
                    </View>
                  </View>
                </TouchableOpacity>
              </Table>
              <View style={Styles.tableListContainer}>
                {showTableBHKOne && (
                  <View
                    style={[
                      {display: showTableBHKOne ? 'flex' : 'none'},
                      Styles.tableListItemsContainer,
                    ]}>
                    <Table>
                      <Row
                        data={listTitles}
                        textStyle={Styles.tableCellHeaderText}
                      />
                      <Rows data={tableData} textStyle={Styles.tableCellText} />
                    </Table>
                  </View>
                )}
              </View>
            </View>
            {/* BHK -2  */}
            <View style={Styles.tableContainer}>
              <Table>
                <TouchableOpacity
                  onPress={toggleTableBHKTwo}
                  style={Styles.tableHeadContainer}>
                  <View style={{flexDirection: 'row'}}>
                    <View style={Styles.tableHeadText}>
                      <Text style={Styles.bhkTableTitle}>2 BHK</Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 22}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Booking value
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingCountValueBHKTwo}
                      </Text>
                    </View>

                    <View style={[Styles.tableHeadText, {marginLeft: 33}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>Units</Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingUnitValueTwo}
                      </Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 23}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Percentage
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingPercentageValueTwo} %
                      </Text>
                    </View>
                    <View style={Styles.tableHeadSVG}>
                      {showTableBHKTwo ? (
                        <BoldArrowUp width={hp('4.5%')} height={hp('3%')} />
                      ) : (
                        <BoldArrowDown width={hp('4.5%')} height={hp('3%')} />
                      )}
                    </View>
                  </View>
                </TouchableOpacity>
              </Table>
              <View style={Styles.tableListContainer}>
                {showTableBHKTwo && (
                  <View
                    style={[
                      {display: showTableBHKTwo ? 'flex' : 'none'},
                      Styles.tableListItemsContainer,
                    ]}>
                    <Table>
                      <Row
                        data={listTitles}
                        textStyle={Styles.tableCellHeaderText}
                      />
                      <Rows data={tableData} textStyle={Styles.tableCellText} />
                    </Table>
                  </View>
                )}
              </View>
            </View>
            {/* BHK - 3 */}
            <View style={Styles.tableContainer}>
              <Table>
                <TouchableOpacity
                  onPress={toggleTableBHKThree}
                  style={Styles.tableHeadContainer}>
                  <View style={{flexDirection: 'row'}}>
                    <View style={Styles.tableHeadText}>
                      <Text style={Styles.bhkTableTitle}>3 BHK</Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 22}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Booking value
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingCountValueBHKThree}
                      </Text>
                    </View>

                    <View style={[Styles.tableHeadText, {marginLeft: 33}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>Units</Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingUnitValueThree}
                      </Text>
                    </View>
                    <View style={[Styles.tableHeadText, {marginLeft: 23}]}>
                      <Text style={Styles.tableHeaderTopLayerText}>
                        Percentage
                      </Text>
                      <Text style={Styles.bhkTableTitle}>
                        {BookingPercentageValueThree} %
                      </Text>
                    </View>
                    <View style={Styles.tableHeadSVG}>
                      {showTableBHKThree ? (
                        <BoldArrowUp width={hp('4.5%')} height={hp('3%')} />
                      ) : (
                        <BoldArrowDown width={hp('4.5%')} height={hp('3%')} />
                      )}
                    </View>
                  </View>
                </TouchableOpacity>
              </Table>
              <View style={Styles.tableListContainer}>
                {showTableBHKThree && (
                  <View
                    style={[
                      {display: showTableBHKThree ? 'flex' : 'none'},
                      Styles.tableListItemsContainer,
                    ]}>
                    <Table>
                      <Row
                        data={listTitles}
                        textStyle={Styles.tableCellHeaderText}
                      />
                      <Rows data={tableData} textStyle={Styles.tableCellText} />
                    </Table>
                  </View>
                )}
              </View>
            </View>
          </View>
        </View>
      </ScrollView>
    </View>
  );
};

export default PerformanceReports;
